// Рассмотрим файл JavaScript из проекта, блок за блоком, чтобы понять, как он работает и как он взаимодействует с CSS
// для создания параллакс-эффекта и плавной прокрутки.
//
// ### Прослушивание события прокрутки
//

window.addEventListener('scroll', e => {
    document.body.style.cssText += `--scrollTop: ${this.scrollY}px`;
})

//
// #### Разбор кода:
//
//     - **`window.addEventListener('scroll', e => {...})`**:
// - Добавляет обработчик событий для события `scroll` на объект `window`.
// - Это событие вызывается всякий раз, когда пользователь прокручивает страницу.
//
// - **`document.body.style.cssText += ...`**:
// - Добавляет или обновляет строку стилей (`cssText`) для элемента `body`.
// - В данном случае, добавляет динамическую переменную `--scrollTop`, которая обновляется значением текущей вертикальной
// прокрутки страницы (`this.scrollY`).
//
// #### Как это работает:
//
//     - Переменная `--scrollTop` используется в CSS для управления трансформацией различных элементов на основе
//     текущей позиции прокрутки.
// - Когда пользователь прокручивает страницу, значение `--scrollTop` обновляется, что приводит к изменению стилей элементов,
// использующих эту переменную. Это создает динамический эффект прокрутки, например, параллакс.
//
// ### Регистрация и использование плагинов GSAP
//
gsap.registerPlugin(ScrollTrigger, ScrollSmoother);
//
// #### Разбор кода:
//
//     - **`gsap.registerPlugin(ScrollTrigger, ScrollSmoother);`**:
// - Регистрация двух плагинов GSAP: `ScrollTrigger` и `ScrollSmoother`.
// - Эти плагины добавляют дополнительные возможности для работы с анимациями и прокруткой.
//
// #### Как это работает:
//
//     - **`ScrollTrigger`**: позволяет запускать анимации или изменять стили в зависимости от положения прокрутки страницы.
//     Он часто используется для создания эффектов, которые зависят от скроллинга, таких как анимации при появлении элементов на экране.
// - **`ScrollSmoother`**: добавляет плавную прокрутку к странице, создавая более приятный для пользователя интерфейс.
// Этот плагин помогает сгладить движения при прокрутке, уменьшая резкость и дергание.
//
// ### Создание плавного скроллинга
//
ScrollSmoother.create({
    wrapper: '.wrapper',
    content: '.content'
})
//
// #### Разбор кода:
//
//     - **`ScrollSmoother.create({...})`**:
// - Создает новый экземпляр `ScrollSmoother` с заданными настройками.
// - `wrapper` и `content` указывают на элементы, которые будут обернуты и содержать основной контент соответственно.
//
// #### Как это работает:
//
//     - **`wrapper: '.wrapper'`**:
// - Указывает элемент, который будет служить оберткой для всего содержимого страницы. Этот элемент (`.wrapper`) будет
// контролировать общую прокрутку.
// - **`content: '.content'`**:
// - Указывает элемент, который содержит весь основной контент страницы. Этот контент будет прокручиваться внутри обертки.
//
// #### Взаимодействие с CSS:
//
//     - Плагин `ScrollSmoother` работает вместе с зарегистрированными элементами `wrapper` и `content`, создавая более
//     плавные движения при прокрутке.
// - Благодаря переменной `--scrollTop`, которая обновляется на каждом событии прокрутки, эффекты, зависящие от скроллинга,
// синхронизируются с изменениями прокрутки.
//
// ### Общий вывод
//
// Этот JavaScript код в комбинации с CSS создает плавные параллакс-эффекты и прокрутку страницы:
//
//     1. **Динамическое обновление переменной `--scrollTop`**:
// - Управляет CSS-переменными на основе текущей позиции прокрутки, что приводит к изменению стилей и трансформаций элементов.
// - Обеспечивает плавные визуальные эффекты при скроллинге.
//
// 2. **Использование плагинов GSAP**:
// - **`ScrollTrigger`**: облегчает создание анимаций, реагирующих на прокрутку.
// - **`ScrollSmoother`**: добавляет плавную прокрутку, улучшая пользовательский интерфейс.
//
// 3. **Организация контента**:
// - Элементы `.wrapper` и `.content` работают вместе, чтобы обеспечивать управляемую и плавную прокрутку всего контента страницы.
//
//     Такой подход позволяет создавать интерактивные и визуально привлекательные веб-страницы, которые реагируют на
//     действия пользователя, улучшая пользовательский опыт.