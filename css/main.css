/*Давайте детально разберем каждый блок CSS-кода в этом проекте, чтобы понять, как он работает и какие задачи решает.*/

/*### Глобальные стили и переменные*/


* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/*- **Обнуление стилей**:*/
/*- Все элементы получают нулевые значения для отступов (`margin`) и полей (`padding`). Это устраняет стили браузера по умолчанию.*/
/*- `box-sizing: border-box` задает модель коробки, при которой поля и границы включены в общую ширину и высоту элементов,
что упрощает управление размерами.*/


:root {
    --scrollTop: 0;
    --index: calc(1vw + 1vh);
    --text: #f8e69e;
    --main_article_transform: translate3d(0, calc(var(--scrollTop) / 7.5), 0);
    --transition: transform .75s cubic-bezier(0.075, 0.5, 0, 1);
}

/*- **Переменные CSS**:*/
/*- `--scrollTop`: текущая позиция прокрутки, изначально установлена в 0.*/
/*- `--index`: динамическое значение, основанное на размерах экрана. `1vw + 1vh` - это сумма 1% ширины и высоты окна,
что делает размеры адаптивными.*/
/*- `--text`: цвет текста, установленный в светлый желтый оттенок.*/
/*- `--main_article_transform`: значение трансформации для основного статьи, рассчитываемое на основе позиции прокрутки.*/
/*- `--transition`: параметры перехода для анимации трансформации, использует функцию Bezier для плавного эффекта.*/


@font-face {
    font-family: raleway_f;
    src: url(../fonts/raleway-regular.woff2);
}
@font-face {
    font-family: raleway_f;
    src: url(../fonts/raleway-black.woff2);
    font-weight: 900;
}

/*- **Подключение шрифтов**:*/
/*- Подключаются два начертания шрифта Raleway: обычное (`regular`) и очень жирное (`black`).
Шрифт используется под именем `raleway_f`.*/

/*### Стили для элемента `body`*/


body {
    background-color: #010101;
    color: white;
    font-family: raleway_f, sans-serif;
    line-height: 1.55;
}

/*- **Основные стили страницы**:*/
/*- `background-color`: темный фон для контраста с текстом.*/
/*- `color`: белый цвет текста.*/
/*- `font-family`: применяет шрифт `raleway_f`, с запасным `sans-serif`.*/
/*- `line-height`: межстрочный интервал для улучшения читабельности.*/

/*### Стили для `.main-header` и ее псевдоэлемента*/


.main-header {
    position: relative;
}

.main-header::after {
    position: absolute;
    content: '';
    z-index: 100;
    width: 100%;
    height: calc(var(--index) * 10);
    background-image: url("../img/ground.png");
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
    bottom: calc(var(--index) * -4.2);
}

/*- **Заголовок с фоном**:*/
/*- `.main-header`: имеет относительное позиционирование, чтобы его дочерние элементы могли позиционироваться относительно него.*/
/*- `.main-header::after`: добавляет декоративный элемент после заголовка.*/
/*- `position: absolute`: позволяет элементу позиционироваться относительно `.main-header`.*/
/*- `z-index: 100`: размещает элемент выше других с меньшим `z-index`.*/
/*- `background-image`: задает фон в виде изображения, который не повторяется и покрывает весь элемент.*/
/*- `bottom`: задает нижнее смещение, основанное на переменной `--index`.*/

/*### Стили для `.layers` и `.layer`*/

.layers {
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    overflow: hidden;
    position: relative;
}

.layer {
    height: 100%;
    width: 100%;
    position: absolute;
    background-size: cover;
    background-position: center;
    will-change: transform;
    z-index: 2;
    transition: var(--transition);
}

/*- **Контейнер для параллакс-слоев**:*/
/*- `.layers`: охватывает всю высоту экрана.*/
/*- `display: flex`: обеспечивает центрирование дочерних элементов.*/
/*- `overflow: hidden`: скрывает элементы, выходящие за пределы контейнера.*/
/*- `.layer`: отдельные слои параллакса.*/
/*- `position: absolute`: позволяет слоям позиционироваться относительно `.layers`.*/
/*- `background-size` и `background-position`: обеспечивают покрытие изображения слоя и центрирование.*/
/*- `will-change: transform`: оптимизирует производительность анимации.*/
/*- `transition`: применяет плавный переход для всех анимаций трансформации.*/


.layers-base {
    transform: translate3d(0, calc(var(--scrollTop) / 1.6), 0);
    z-index: 0;
}

.layers-middle {
    transform: translate3d(0, calc(var(--scrollTop) / 2.5), 0);
}

.layers-front {
    transform: translate3d(0, calc(var(--scrollTop) / 5.7), 0);
}

/*- **Трансформации параллакс-слоев**:*/
/*- Эти классы применяются к слоям, чтобы сместить их вертикально на основе позиции прокрутки.*/
/*- Чем больше делитель (`/ 1.6`, `/ 2.5`, `/ 5.7`), тем медленнее слой движется относительно прокрутки, создавая иллюзию глубины.*/

/*### Стили для текстовых элементов `.layers`*/


.layers-title {
    font-size: calc(var(--index) * 2.5);
    letter-spacing: calc(var(--index) / 2.25);
}

.layers-caption {
    font-size: calc(var(--index) / 1.175);
    letter-spacing: calc(var(--index) / 3.5);
    margin-top: calc(var(--index) * -.75);
}

.layers-header {
    z-index: 1;
    transform: translate3d(0, calc(var(--scrollTop) / 2), 0);
    will-change: transform;
    text-transform: uppercase;
    font-weight: 900;
    color: var(--text);
    text-shadow: 0 0 15px #efc817;
    transition: var(--transition);
}

/*- **Стили для заголовков**:*/
/*- `.layers-title`: задает размер и межбуквенное расстояние для основного заголовка.*/
/*- `.layers-caption`: определяет размер, межбуквенное расстояние и верхний отступ для подзаголовка.*/
/*- `.layers-header`: объединяет заголовок и подзаголовок, применяя дополнительные стили:*/
/*- `z-index: 1`: размещает текст выше базового слоя.*/
/*- `transform`: смещает текст на основе прокрутки.*/
/*- `text-transform: uppercase`: делает текст заглавными буквами.*/
/*- `font-weight: 900`: делает текст жирным.*/
/*- `color`: задает цвет текста из переменной `--text`.*/
/*- `text-shadow`: добавляет тень к тексту для эффекта свечения.*/

/*### Стили для основного контента `.main-article`*/

.main-article {
    --main_article_transform: translate3d(0, calc(var(--scrollTop) / -7.5), 0);
    min-height: 100vh;
    background-size: cover;
    background-position: center;
    color: var(--text);
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    text-align: center;
}

.main-article_header {
    text-transform: uppercase;
    font-size: calc(var(--index) * 1.5);
    letter-spacing: calc(var(--index) / 7.5);
    transform: var(--main_article_transform);
    will-change: transform;
    transition: var(--transition);
}

.main-article_paragraph {
    max-width: calc(var(--index) * 30);
    font-size: calc(var(--index) * .9);
    margin-top: calc(var(--index) / 1.25);
    transform: var(--main_article_transform);
    will-change: transform;
    transition: var(--transition);
}

/*- **Основной контент**:*/
/*- `.main-article`: задает стили для статьи.*/
/*- `min-height: 100vh`: обеспечивает минимум высоту в один экран.*/
/*- `background-size` и `background-position`: задают размер и центрирование фона.*/
/*- `color`: цвет текста, заданный переменной `--text`.*/
/*- `display: flex`: центрирует текст внутри элемента.*/
/*- `.main-article_header`: стили для*/

/*   заголовка статьи.*/
/*- `text-transform: uppercase`: делает текст заглавными.*/
/*- `font-size` и `letter-spacing`: задают размер и межбуквенное расстояние на основе переменной `--index`.*/
/*- `transform`: применяет трансформацию на основе прокрутки.*/
/*- `.main-article_paragraph`: стили для параграфа текста.*/
/*- `max-width`: ограничивает ширину текста.*/
/*- `font-size`: размер шрифта, основанный на переменной `--index`.*/
/*- `margin-top`: верхний отступ.*/
/*- `transform`: применяет ту же трансформацию, что и заголовок.*/

/*### Дополнительные элементы*/


.wrapper {
    will-change: transform;
}

.content {
    will-change: transform;
}

.copy {
    position: absolute;
    bottom: calc(var(--index) * 1.5);
    opacity: .45;
    font-size: calc(var(--index) * .75);
    letter-spacing: calc(var(--index) / 37.5);
}

/*- **Оптимизация и позиционирование**:*/
/*- `.wrapper` и `.content`: оптимизированы для изменений трансформации.*/
/*- `.copy`: позиционируется снизу страницы.*/
/*- `opacity: .45`: полупрозрачный текст.*/
/*- `font-size` и `letter-spacing`: задают размер и межбуквенное расстояние на основе переменной `--index`.*/

/*### Общий вывод*/

/*    Этот CSS код создает стильный и адаптивный макет с параллакс-эффектом, используя возможности CSS-переменных для
удобного управления динамическими стилями. Анимации и трансформации задаются с помощью переменных и библиотеки GSAP,
что упрощает их поддержание и изменение. Такой подход делает сайт визуально привлекательным и удобным в использовании.*/